rgName="ch06-rg"
storageAccountName="cookbookch06adfdemo"

az storage account create --name $storageAccountName --resource-group $rgName --sku Standard_LRS

storageKey=$(az storage account keys list --resource-group $rgName --account-name $storageAccountName --query [0].value --output tsv)

az storage container create --name "datasource" --account-name $storageAccountName --account-key $storageKey

az storage container create --name "datasink" --account-name $storageAccountName --account-key $storageKey

blobName="country_list.json"

az storage blob upload --account-key $storageKey --file country_list.json --account-name $storageAccountName --container-name datasource --name $blobName

adfName="cookbookch0601adf"

# Answer Y to "The command requires the extension datafactory. Do you want to install it now? The command will continue to run after the extension is installed.(Y/n):"
az datafactory create --resource-group $rgName --factory-name $adfName

# DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=cookbookch06adfdemo;AccountKey=mnyhHwzXtIO81C0Ogko1xZh9kj2eaBQCQuEVqTbvBUJuBP31zsEF5irHh8tBJYKoPToP4QXlPXFU+AStd7L2Ew==;BlobEndpoint=https://cookbookch06adfdemo.blob.core.windows.net/;FileEndpoint=https://cookbookch06adfdemo.file.core.windows.net/;QueueEndpoint=https://cookbookch06adfdemo.queue.core.windows.net/;TableEndpoint=https://cookbookch06adfdemo.table.core.windows.net/
storageConnection=$(az storage account show-connection-string --resource-group $rgName --name $storageAccountName --key key1 --output tsv)


//StorageLinkedService.json
{
    "type": "AzureBlobStorage",
    "typeProperties": {
        "connectionString": "{connection_string}"
    }
}


az datafactory linked-service create --resource-group $rgName --factory-name $adfName --linked-service-name SourceSinkStorageLinkedService --properties StorageLinkedService.json


//InputDataset.json
{
    "linkedServiceName": {
        "referenceName": "SourceSinkStorageLinkedService",
        "type": "LinkedServiceReference"
    },
    "annotations": [],
    "type": "Binary",
    "typeProperties": {
        "location": {
            "type": "AzureBlobStorageLocation",
            "fileName": "country_list.json",
            "folderPath": "input",
            "container": "datasource"
        }
    }
}

az datafactory dataset create --resource-group $rgName --dataset-name SourceDataset --factory-name $adfName --properties InputDataset.json

//SinkDataSet.json
{
    "linkedServiceName": {
        "referenceName": "SourceSinkStorageLinkedService",
        "type": "LinkedServiceReference"
    },
    "annotations": [],
    "type": "Binary",
    "typeProperties": {
        "location": {
            "type": "AzureBlobStorageLocation",
            "fileName": "country_list.csv",
            "folderPath": "input",
            "container": "datasink"
        }
    }
}


az datafactory dataset create --resource-group $rgName --dataset-name SinkDataset --factory-name $adfName --properties SinkDataset.json


//MoveJsonToCSVPipeline.json

{
    "name": "JsonToCSVPipeline",
    "properties": {
        "activities": [
            {
                "name": "CopyFromJsonToCSV",
                "type": "Copy",
                "dependsOn": [],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "JsonSource",
                        "storeSettings": {
                            "type": "AzureBlobStorageReadSettings",
                            "recursive": true,
                            "wildcardFileName": "country_list.json",
                            "enablePartitionDiscovery": false
                        },
                        "formatSettings": { "type": "JsonReadSettings" }
                    },
                    "sink": {
                        "type": "DelimitedTextSink",
                        "storeSettings": { "type": "AzureBlobStorageWriteSettings" },
                        "formatSettings": {
                            "type": "DelimitedTextWriteSettings",
                            "quoteAllText": true,
                            "fileExtension": ".csv"
                        }
                    },
                    "enableStaging": false,
                    "translator": {
                        "type": "TabularTranslator",
                        "mappings": [
                            {
                                "source": { "path": "$['name']" },
                                "sink": {
                                    "type": "String",
                                    "ordinal": 1
                                }
                            },
                            {
                                "source": { "path": "$['capital']" },
                                "sink": {
                                    "type": "String",
                                    "ordinal": 2
                                }
                            },
                            {
                                "source": { "path": "$['flag']" },
                                "sink": {
                                    "type": "String",
                                    "ordinal": 3
                                }
                            }
                        ]
                    }
                },
                "inputs": [
                    {
                        "referenceName": "SourceDataset",
                        "type": "DatasetReference",
                        "parameters": {}
                    }
                ],
                "outputs": [
                    {
                        "referenceName": "SinkDataset",
                        "type": "DatasetReference",
                        "parameters": {}
                    }
                ]
            }
        ],
        "annotations": []
    }
}

az datafactory pipeline create --resource-group $rgName --factory-name $adfName --name CopyFromJsonToCSVPipeline --pipeline MoveJsonToCSVPipeline.json

runID=$(az datafactory pipeline create-run --resource-group $rgName --factory-name $adfName --name CopyFromJsonToCSVPipeline --output tsv)

az datafactory pipeline-run show --resource-group $rgName --factory-name $adfName --run-id $runID

az storage blob list --account-name $storageAccountName --account-key $storageKey --container-name "datasink" --query [].name













